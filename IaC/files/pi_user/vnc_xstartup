#!/bin/sh
exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>/tmp/xvnc_startup.out 2>&1
export DISPLAY=:1

export PATH=/home/pi/.local/bin:/home/pi/.nvm/versions/node/v18.15.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin

#xrdb "$HOME/.Xresources"
xsetroot -solid grey
export XKL_XMODMAP_DISABLE=1
/etc/X11/Xsession

xset s off
xset s noblank

# Cleanup the logs folder - can we improve this with a better logrotate?
echo "FS clean up"
(sudo /usr/local/sbin/cleanup_fs.sh 30 /var/log/ |sudo tee /root/file_deleted&)

echo "Check the FS"
available=$(df / --output=pcent| tail -1| tr -d "%")
[ "$available" -le 20 ] && xterm -e "figlet -f banner 001 Call the support ; sleep 15; exit"
#x-terminal-emulator -geometry 80x24+10+10 -ls -title "$VNCDESKTOP Desktop" &
#x-window-manager &
# Fix to make GNOME work

# Expected sources:
# 0       alsa_output.usb-Creative_Technology_Ltd_Sound_Blaster_Play__3_00252407-00.analog-stereo.monitor module-alsa-card.c      s16le 2ch 44100Hz       IDLE
# 1       alsa_input.usb-Creative_Technology_Ltd_Sound_Blaster_Play__3_00252407-00.analog-stereo  module-alsa-card.c      s16le 2ch 44100Hz       IDLE
# 2       alsa_output.platform-bcm2835_audio.stereo-fallback.monitor      module-alsa-card.c      s16le 2ch 44100Hz       IDLE

#nohup parecord -vvv --channels=2 -d recording.monitor /home/pi/output.wav 1> /home/pi/parecord_nohup.log 2>&1 &
#xterm -e nohup parecord -v --channels=2 -d recording.monitor /home/pi/output.wav 1> /home/pi/parecord_nohup.log 2>&1 # Comment  to record with soundrecord pythin library

## Begin - Needed to record the audio
#logger "start Jupyter"
#cd /home/pi/translation_system
#jupyter notebook --no-browser --ip 0.0.0.0 --port 8889 &
## End audio rcording

echo "Pulse config"
logger "Pulse config"
sleep 30 # ADD to check when jitsi is ready
pulseaudio -D -k -v --start # something is starting pulseaudio before this one. -k is needed to restart it

pacmd load-module module-null-sink sink_name=recording sink_properties=device.description=recording &
pacmd load-module module-combine-sink sink_name=combined sink_properties=device.description=combined slaves=recording,alsa_output.usb-Creative_Technology_Ltd_Sound_Blaster_Play__3_00252407-00.analog-stereo &
pacmd load-module module-loopback source=alsa_input.usb-Creative_Technology_Ltd_Sound_Blaster_Play__3_00252407-00.analog-stereo sink=recording &

env > /home/pi/pa_list
pactl list short sources >> /home/pi/pa_list
# To test
#chromium https://translation.sennsolutions.com/english &
# Start the reactApp
#cd /home/pi/translation_system/jitsi-gemeinde-app
#serve -sn build &
# Start the Backend app
echo "Start the Backend app"
cd /home/pi/translation_system/jitsi_gemeinde_backend
npm start &
sleep 3
#chromium http://localhost:3000 &
# Set the default page in chromium to https://translation.sennsolutions.com/english
#chromium &

# Try to set Chromium to a normal start
sed -si 's/exit_type\":\"Crashed/exit_type\":\"none/' ~/.config/chromium/Default/Preferences

# Try to limit the tmpfs -  this works but when the FS is full Chrome dies.
# sudo mount -o remount,size=400M /media/root-rw/
# set the kiosk mode to have problem when the chromium doesn't shutdown correctly and we get the restore page window
# Prod in the church
echo "Start chromium Kiosk"
chromium --kiosk --app=http://localhost:5000
#chromium http://localhost:5000 # To debug

# How to avoid the restore page problem
# https://superuser.com/questions/1640618/how-to-disable-permanently-the-chromium-popup-after-crash-or-hard-boot/1643107#1643107
# su
# chattr  +i  .config/chromium/Default/Preferences
# chattr  +i  .config/chromium/'Local State'
